@page "/dashboard"
@inject NavigationManager NavigationManager

<Toasts @ref="toasts"></Toasts>

@if (AllRaces != null)
{
	<h1 class="text-center m-3">Welcome back, arranger</h1>

	<div class="content-box-section">
		<div class="content-box">

			<div>
				<h2>New Race</h2>
			</div>
			<div class="d-flex flex-column gap-3">
				<a class="btn btn-normal" href="@($"/new-race")">
					<span>Create a new race from scratch</span>
					<i class="bi btn-bi bi-plus-lg"></i>
				</a>
				<a class="btn btn-normal">
					<span>Duplicate an existing race</span>
					<i class="bi btn-bi bi-copy"></i>
				</a>
			</div>
		</div>
		<div class="content-box">
			@if (AllRaces.Count > 0)
			{
				<div>
					<h2>Upcoming Races</h2>
				</div>
				<div>
					<table class="table table-responsive">
						<thead>
							<tr>
								<td>Name</td>
								<td>Start</td>
							</tr>
						</thead>
						<tbody class="table-group-divider">
							@foreach (var race in AllRaces)
							{
								<tr @onclick="@(()=>NavigationManager.NavigateTo($"/race-view/{race.Id}"))">
									<th>@race.Name</th>
									<td>
										@if (race.AllStartDatetime().Count > 1)
										{
											@foreach (var startTime in race.AllStartDatetime())
											{
												<div>@Startlist.StartDatetimeString(startTime)</div>
											}
										}
										else
										{
											<span>@Startlist.StartDatetimeString(race.FirstStartDatetime())</span>
										}
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			}
			else
			{
				<div>
					<h2>No Upcoming Races</h2>
				</div>
			}
		</div>
	</div>
}
else
{
	<div class="page-spinner spinner-border" role="status">
		<span class="visually-hidden">Loading...</span>
	</div>
}



@code {
	List<Race>? AllRaces;
	private Toasts toasts = new Toasts();

	protected override async Task OnInitializedAsync()
	{
		await LoadRaces();
		await InvokeAsync(StateHasChanged);
	}

	private async Task LoadRaces()
	{
		var races = await RaceService.GetRacesAsync(jsRuntime);
		if (races == null)
		{
			toasts?.CreateToast(new Toast("", "Error while loading races", "text-bg-danger"));
			return;
		}
		AllRaces = races.OrderBy(race => race.FirstStartDatetime() == null).ThenBy(race => race.FirstStartDatetime()).ToList();
	}
}
